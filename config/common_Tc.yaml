Wafer:
  layer: 21
  inch: 4
  material: "silicon"

LaunchPad:
  layer: 4
  pad:
    length: 170
    width: 320
    gap:
      length: 340
      width: 800
  trace:
    length: 570
    width: 20
    gap:
      width: 11

FeedLine:
  input:
    type: "LaunchPad"
    pos: [-400, 1100]
    angle: 90
  output:
    type: "LaunchPad" # "ShortToGround"
    pos: [-400, -1100]
    angle: -90

  ## If you just want to connect the input and output port,
  ## this is the easiest way.
  ## options are listed in https://phidl.readthedocs.io/en/latest/tutorials/routing.html#List-of-routing-path-types

  path:
    type: "straight"
    length1: None
    length2: None
    radius: None

  ## This is probably the best way to make a user defined
  ## complex meander. You can extract the position to place
  ## resonators next to the feedline by using the path points.
  # path:
  #   type: "manual"
  #   radius: 40
  #   points:
  #     - [-400, 100]
  #     - [300, 100]
  #     - [300, -100]
  #     - [-400, -100]   

  ## You can make a complex meander by the "extrude" option, 
  ## but this is not recommended since it is difficult to
  ## extract the meander positions.
  ## The output launchpad will be automatically moved.
  # path:
  #   type: "extrude"
  #   points:
  #     - ["straight", 1100]
  #     - ["left", 100]
  #     - ["straight", 400]
  #     - ["right", 100]
  #     - ["straight", 400]    

Frame:
  layer: 25
  width: 50
  size:
    height: 4750
    width: 2350

DCLine:
  radius: 100

CornerPoint:
  layer: 4
  width: 10
  gap:
    width: 20
  pos:
    - [ 1000, 2200]
    - [-1000, 2200]
    - [-1000,-2200]
    - [ 1000,-2200]

Resonator:
  layer: 4
  width: 10
  radius: 75
  pad:
    width: 700
    length: 700
  gap:
    width: 6
  devices:
    - resonator_straight1: 220
      resonator_straight2: 260
      resonator_straight3: 475
      resonator_straight4: 700
      n_step: 3
      transmon: false
      mirror: true
      print_length: false
      # norm_to_length: 3250
      norm_to_frequency: 7000
      angle: -90
      feedline_gap: 13
      y: 500
      # If FeedLine_path_type is 'manual' you need to specify which path point you want to use to calculate x
      # x_pathpoint: 0
      # y: 600
    - resonator_straight1: 220
      resonator_straight2: 260
      resonator_straight3: 475
      resonator_straight4: 1100
      n_step: 3
      transmon: false
      mirror: false
      print_length: false
      # norm_to_length: 3700
      norm_to_frequency: 7500
      angle: 90
      feedline_gap: 13
      y: -500
      # x_pathpoint: 3
      # y: -600

TestPoint:
  layer: 4
  box:
    width: 279
    length: 135
    gap:
      width: 27
  stub:
    width: 18
    length: 68.4
    gap:
      width: 18
      length: 14.4  

# EB line for testing shadow evaporation
EBLine:
    box:
      layer: 2
      width: 2.7
      overlay: 0.27
    finger:
      layer: 1
      inner: 
        width: 0.473
        length: 16.2    
      outer:
        width: 0.608
        length: 10.8


EBMarker:
  layer: 3
  pos: 
    - [     0,      0]
    - [     0,  38400]
    - [-19200, -28800]
    - [ 38400,      0]
    - [     0, -38400]
    - [-19200, -38400]
    - [-38400,      0]


Grid:
  name: "TcSample"
  layer: 9
  lines:
    x: 16
    y: 10
  sweep:
    ## If you have many parameters to sweep, use gridsweep to make a 2D array
    ## The example below has different resonator length for each row
    type: "gridsweep"
    array:
      - param_x: ["Resonator_devices:0:n_step", "Resonator_devices:1:n_step"]
        param_y: ["Resonator_devices:0:norm_to_frequency", "Resonator_devices:1:norm_to_frequency"]
        x: [[3, 3], [4, 4], [5, 5]]
        y: [[6500, 7500], [7000, 8000], [7500, 8500], [8000, 9000]]
        gap_x: 0
        gap_y: 0
      - param_x: ["Resonator_devices:0:feedline_gap", "Resonator_devices:1:feedline_gap"]
        param_y: "dummy"
        x: [[10, 10], [13, 13], [20, 20], [30, 30]]
        y: [0, 0]
        gap_x: 1
        gap_y: 1

    ## More manual way to place chip designs
    ## Place arguments in the array, where you want samples
    ## Put "null" if you want an empty cell
    # type: "array"
    # devices:
    #   - Resonator_frequency: [6500, 7500]
    #   - Resonator_frequency: [7000, 8000]
    #   - Resonator_frequency: [7500, 8500]
    #   - Resonator_frequency: [8000, 9000]
    # array: [
    #   [0    , null  , 1     , 3     , 1    , null  , 2     , 0    ],
    #   [1    , null  , 3     , 0     , 0    , 1     , 2     , null ], 
    #   [0    , 1     , 2     , null  , 1    , 3     , null  , 1    ],
    #   [1    , 0     , null  , 1     , 1    , null  , 2     , 0    ], 
    #   [0    , 1     , 2     , null  , 1    , 0     , 3     , 1    ],
    #   [1    , null  , 3     , 0     , 3    , 1     , 2     , null ], 
    # ]
    # gap_x : 0
    # gap_y : 1